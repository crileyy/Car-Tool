{"ast":null,"code":"import _defineProperty from \"/Users/criley/Documents/Projects/car-tool/car-tool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/criley/Documents/Projects/car-tool/car-tool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/criley/Documents/Projects/car-tool/car-tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/criley/Documents/Projects/car-tool/car-tool/src/components/CarForm.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // only collects car data\n\nexport var CarForm = function CarForm(_ref) {\n  var buttonText = _ref.buttonText,\n      onAddCar = _ref.onAddCar;\n\n  var _useState = useState({\n    newCar: {\n      id: '',\n      make: '',\n      model: '',\n      year: '',\n      color: '',\n      price: ''\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var change = function change(e) {\n    setState({\n      newCar: _objectSpread({}, state.newCar, _defineProperty({}, e.target.name, e.target.value))\n    });\n  };\n\n  var addCar = function addCar() {\n    onAddCar(state.newCar);\n    setState({\n      newCar: {\n        id: '',\n        make: '',\n        model: '',\n        year: '',\n        color: '',\n        price: ''\n      }\n    });\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"make-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"New make\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"make-input\",\n    name: \"make\",\n    value: state.newCar.make,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"model-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"New model\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"model-input\",\n    name: \"model\",\n    value: state.newCar.model,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"year-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"New year\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"year-input\",\n    name: \"year\",\n    value: state.newCar.year,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"color-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"New color\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"color-input\",\n    name: \"color\",\n    value: state.newCar.color,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"price-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"New price\"), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"price-input\",\n    name: \"price\",\n    value: state.newCar.price,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return addCar();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, buttonText));\n};\nCarForm.propTypes = {\n  buttonText: PropTypes.string,\n  onAddCar: PropTypes.func\n};\nCarForm.defaultProps = {\n  buttonText: 'Add Car'\n};","map":{"version":3,"sources":["/Users/criley/Documents/Projects/car-tool/car-tool/src/components/CarForm.js"],"names":["React","useState","PropTypes","CarForm","buttonText","onAddCar","newCar","id","make","model","year","color","price","state","setState","change","e","target","name","value","addCar","propTypes","string","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// only collects car data\nexport const CarForm = ({ buttonText, onAddCar}) => {\n\n  const [state, setState] = useState({\n    newCar: {\n      id: '',\n      make: '',\n      model: '',\n      year: '',\n      color: '',\n      price: '',\n    },\n  });\n\n  const change = (e) => {\n    setState({\n      newCar: {\n        ...state.newCar,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  const addCar = () => {\n    onAddCar(state.newCar);\n    setState({\n      newCar: {\n        id: '',\n        make: '',\n        model: '',\n        year: '',\n        color: '',\n        price: '',\n      },\n    })\n  }\n\n  return <form>\n    <div>\n      <label htmlFor=\"make-input\">New make</label>\n      <input type=\"text\" id=\"make-input\" name=\"make\"\n        value={state.newCar.make} onChange={change} />\n    </div>\n    <div>\n      <label htmlFor=\"model-input\">New model</label>\n      <input type=\"text\" id=\"model-input\" name=\"model\"\n        value={state.newCar.model} onChange={change} />\n    </div>\n    <div>\n      <label htmlFor=\"year-input\">New year</label>\n      <input type=\"text\" id=\"year-input\" name=\"year\"\n        value={state.newCar.year} onChange={change} />\n    </div>\n    <div>\n      <label htmlFor=\"color-input\">New color</label>\n      <input type=\"text\" id=\"color-input\" name=\"color\"\n        value={state.newCar.color} onChange={change} />\n    </div>\n    <div>\n      <label htmlFor=\"price-input\">New price</label>\n      <input type=\"text\" id=\"price-input\" name=\"price\"\n        value={state.newCar.price} onChange={change} />\n    </div>\n    <button type=\"button\" onClick={() => addCar()}>{buttonText}</button>\n  </form>;\n};\n\nCarForm.propTypes = {\n  buttonText: PropTypes.string,\n  onAddCar: PropTypes.func,\n};\n\nCarForm.defaultProps = {\n  buttonText: 'Add Car',\n};"]},"metadata":{},"sourceType":"module"}