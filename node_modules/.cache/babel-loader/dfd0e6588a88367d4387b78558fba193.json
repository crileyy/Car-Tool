{"ast":null,"code":"var _jsxFileName = \"/Users/criley/Documents/Projects/car-tool/car-tool/src/components/CarTable.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CarViewRow } from './CarViewRow';\nimport { EditCarRow } from './EditCarRow';\nexport var CarTable = function CarTable(_ref) {\n  var cars = _ref.cars,\n      deleteCar = _ref.deleteCar,\n      updateCar = _ref.updateCar,\n      toggleEdit = _ref.toggleEdit,\n      editCarId = _ref.editCarId;\n  return React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Id\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Make\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Model\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Year\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Color\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Price\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Actions\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, cars.map(function (car) {\n    return car.id === editCarId ? React.createElement(EditCarRow, {\n      car: car,\n      toggleEdit: toggleEdit,\n      updateCar: updateCar,\n      key: car.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }) : React.createElement(CarViewRow, {\n      car: car,\n      deleteCar: deleteCar,\n      toggleEdit: toggleEdit,\n      key: car.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  })));\n};\nCarTable.propTypes = {\n  cars: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    make: PropTypes.string,\n    model: PropTypes.string,\n    year: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string,\n    price: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  })).isRequired,\n  deleteCar: PropTypes.func,\n  updateCar: PropTypes.func\n};\nCarTable.defaultProps = {\n  cars: []\n};","map":{"version":3,"sources":["/Users/criley/Documents/Projects/car-tool/car-tool/src/components/CarTable.js"],"names":["React","PropTypes","CarViewRow","EditCarRow","CarTable","cars","deleteCar","updateCar","toggleEdit","editCarId","map","car","id","propTypes","arrayOf","shape","number","make","string","model","year","oneOfType","color","price","isRequired","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA2D;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,SAAkD,QAAlDA,SAAkD;AAAA,MAAvCC,SAAuC,QAAvCA,SAAuC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AAEjF,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,CADF,CADK,EAYL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACK,GAAL,CAAS,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,EAAJ,KAAWH,SAAX,GACb,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEE,GAAjB;AAAsB,MAAA,UAAU,EAAEH,UAAlC;AAA8C,MAAA,SAAS,EAAED,SAAzD;AAAoE,MAAA,GAAG,EAAEI,GAAG,CAACC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa,GAEb,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAED,GAAjB;AAAsB,MAAA,SAAS,EAAEL,SAAjC;AAA4C,MAAA,UAAU,EAAEE,UAAxD;AAAoE,MAAA,GAAG,EAAEG,GAAG,CAACC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFS;AAAA,GAAZ,CADH,CAZK,CAAP;AAmBD,CArBM;AAuBPR,QAAQ,CAACS,SAAT,GAAqB;AACnBR,EAAAA,IAAI,EAAEJ,SAAS,CAACa,OAAV,CAAkBb,SAAS,CAACc,KAAV,CAAgB;AACtCH,IAAAA,EAAE,EAAEX,SAAS,CAACe,MADwB;AAEtCC,IAAAA,IAAI,EAAEhB,SAAS,CAACiB,MAFsB;AAGtCC,IAAAA,KAAK,EAAElB,SAAS,CAACiB,MAHqB;AAItCE,IAAAA,IAAI,EAAEnB,SAAS,CAACoB,SAAV,CAAoB,CACxBpB,SAAS,CAACiB,MADc,EAExBjB,SAAS,CAACe,MAFc,CAApB,CAJgC;AAQtCM,IAAAA,KAAK,EAAErB,SAAS,CAACiB,MARqB;AAStCK,IAAAA,KAAK,EAAEtB,SAAS,CAACoB,SAAV,CAAoB,CACzBpB,SAAS,CAACiB,MADe,EAEzBjB,SAAS,CAACe,MAFe,CAApB;AAT+B,GAAhB,CAAlB,EAaFQ,UAde;AAenBlB,EAAAA,SAAS,EAAEL,SAAS,CAACwB,IAfF;AAgBnBlB,EAAAA,SAAS,EAAEN,SAAS,CAACwB;AAhBF,CAArB;AAmBArB,QAAQ,CAACsB,YAAT,GAAwB;AACtBrB,EAAAA,IAAI,EAAE;AADgB,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CarViewRow } from './CarViewRow';\nimport { EditCarRow } from './EditCarRow';\n\nexport const CarTable = ({ cars, deleteCar, updateCar, toggleEdit, editCarId }) => {\n\n  return <table>\n    <thead>\n      <tr>\n        <th>Id</th>\n        <th>Make</th>\n        <th>Model</th>\n        <th>Year</th>\n        <th>Color</th>\n        <th>Price</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {cars.map(car => car.id === editCarId \n        ? <EditCarRow car={car} toggleEdit={toggleEdit} updateCar={updateCar} key={car.id}/> \n        : <CarViewRow car={car} deleteCar={deleteCar} toggleEdit={toggleEdit} key={car.id}/>)}\n    </tbody>\n\n  </table>;\n};\n\nCarTable.propTypes = {\n  cars: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    make: PropTypes.string,\n    model: PropTypes.string,\n    year: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    color: PropTypes.string,\n    price: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n  })).isRequired,\n  deleteCar: PropTypes.func,\n  updateCar: PropTypes.func,\n};\n\nCarTable.defaultProps = {\n  cars: [],\n};"]},"metadata":{},"sourceType":"module"}