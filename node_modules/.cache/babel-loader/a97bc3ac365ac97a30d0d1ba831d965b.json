{"ast":null,"code":"import _defineProperty from \"/Users/criley/Documents/Projects/car-tool/car-tool/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/criley/Documents/Projects/car-tool/car-tool/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/criley/Documents/Projects/car-tool/car-tool/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/criley/Documents/Projects/car-tool/car-tool/src/components/EditCarRow.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nexport var EditCarRow = function EditCarRow(_ref) {\n  var car = _ref.car,\n      toggleEdit = _ref.toggleEdit,\n      updateCar = _ref.updateCar;\n\n  var _useState = useState({\n    newCar: _objectSpread({}, car)\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var change = function change(e) {\n    setState({\n      newCar: _objectSpread({}, state.newCar, _defineProperty({}, e.target.name, e.target.value))\n    });\n  };\n\n  return React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, car.id), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"make-input\",\n    name: \"make\",\n    value: state.newCar.make,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"model-input\",\n    name: \"model\",\n    value: state.newCar.model,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"year-input\",\n    name: \"year\",\n    value: state.newCar.year,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"color-input\",\n    name: \"color\",\n    value: state.newCar.color,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"price-input\",\n    name: \"price\",\n    value: state.newCar.price,\n    onChange: change,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return updateCar(state.newCar);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: function onClick() {\n      return toggleEdit('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Cancel\")));\n};\nEditCarRow.propTypes = {\n  car: PropTypes.shape({\n    id: PropTypes.number,\n    make: PropTypes.string,\n    model: PropTypes.string,\n    year: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    color: PropTypes.string,\n    price: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  })\n};","map":{"version":3,"sources":["/Users/criley/Documents/Projects/car-tool/car-tool/src/components/EditCarRow.js"],"names":["React","useState","PropTypes","EditCarRow","car","toggleEdit","updateCar","newCar","state","setState","change","e","target","name","value","id","make","model","year","color","price","propTypes","shape","number","string","oneOfType"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const EditCarRow = ({ car, toggleEdit, updateCar }) => {\n\n  const [state, setState] = useState({\n    newCar: {\n      ...car\n    },\n  });\n\n  const change = (e) => {\n    setState({\n      newCar: {\n        ...state.newCar,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  return <tr>\n    <td>{car.id}</td>\n    <td><input type=\"text\" id=\"make-input\" name=\"make\"\n      value={state.newCar.make} onChange={change} /></td>\n    <td><input type=\"text\" id=\"model-input\" name=\"model\"\n      value={state.newCar.model} onChange={change} /></td>\n    <td><input type=\"text\" id=\"year-input\" name=\"year\"\n      value={state.newCar.year} onChange={change} /></td>\n    <td><input type=\"text\" id=\"color-input\" name=\"color\"\n      value={state.newCar.color} onChange={change} /></td>\n    <td><input type=\"text\" id=\"price-input\" name=\"price\"\n      value={state.newCar.price} onChange={change} /></td>\n    <td><button type=\"button\" onClick={() => updateCar(state.newCar)}>Save</button>\n      <button type=\"button\" onClick={() => toggleEdit('')}>Cancel</button></td>\n  </tr>;\n};\n\nEditCarRow.propTypes = {\n  car: PropTypes.shape({\n    id: PropTypes.number,\n    make: PropTypes.string,\n    model: PropTypes.string,\n    year: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    color: PropTypes.string,\n    price: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n  })\n};"]},"metadata":{},"sourceType":"module"}